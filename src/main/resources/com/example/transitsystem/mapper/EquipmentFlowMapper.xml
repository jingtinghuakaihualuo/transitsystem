<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.transitsystem.mapper.EquipmentFlowMapper" >
  <resultMap id="BaseResultMap" type="com.example.transitsystem.bean.EquipmentFlow" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="sno" property="sno" jdbcType="VARCHAR" />
    <result column="mac" property="mac" jdbcType="VARCHAR" />
    <result column="size" property="size" jdbcType="REAL" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="update_time" property="updateTime" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, sno, mac, size, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.transitsystem.bean.EquipmentFlowExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_equipment_flow
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_equipment_flow
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_equipment_flow
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.transitsystem.bean.EquipmentFlowExample" >
    delete from t_equipment_flow
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.transitsystem.bean.EquipmentFlow" >
    insert into t_equipment_flow (id, sno, mac, 
      size, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{sno,jdbcType=VARCHAR}, #{mac,jdbcType=VARCHAR}, 
      #{size,jdbcType=REAL}, #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.transitsystem.bean.EquipmentFlow" >
    insert into t_equipment_flow
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="sno != null" >
        sno,
      </if>
      <if test="mac != null" >
        mac,
      </if>
      <if test="size != null" >
        size,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sno != null" >
        #{sno,jdbcType=VARCHAR},
      </if>
      <if test="mac != null" >
        #{mac,jdbcType=VARCHAR},
      </if>
      <if test="size != null" >
        #{size,jdbcType=REAL},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.transitsystem.bean.EquipmentFlowExample" resultType="java.lang.Integer" >
    select count(*) from t_equipment_flow
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_equipment_flow
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.sno != null" >
        sno = #{record.sno,jdbcType=VARCHAR},
      </if>
      <if test="record.mac != null" >
        mac = #{record.mac,jdbcType=VARCHAR},
      </if>
      <if test="record.size != null" >
        size = #{record.size,jdbcType=REAL},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_equipment_flow
    set id = #{record.id,jdbcType=INTEGER},
      sno = #{record.sno,jdbcType=VARCHAR},
      mac = #{record.mac,jdbcType=VARCHAR},
      size = #{record.size,jdbcType=REAL},
      create_time = #{record.createTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.transitsystem.bean.EquipmentFlow" >
    update t_equipment_flow
    <set >
      <if test="sno != null" >
        sno = #{sno,jdbcType=VARCHAR},
      </if>
      <if test="mac != null" >
        mac = #{mac,jdbcType=VARCHAR},
      </if>
      <if test="size != null" >
        size = #{size,jdbcType=REAL},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.transitsystem.bean.EquipmentFlow" >
    update t_equipment_flow
    set sno = #{sno,jdbcType=VARCHAR},
      mac = #{mac,jdbcType=VARCHAR},
      size = #{size,jdbcType=REAL},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getNetworkStatistical" parameterType="com.example.transitsystem.vo.NetworkStatisticalRequest"
          resultType="com.example.transitsystem.vo.NetworkStatisticalRespnose">
    select t.sno, t.mac, cast(t.totalSize as DECIMAL(15, 2)) as totalFlow
    from (
      select sno, mac, sum(size) as totalSize
      from t_equipment_flow
      where 1 = 1
      <if test="request.sno != null">
        and sno = #{request.sno,jdbcType=VARCHAR}
      </if>
      <if test="request.mac != null">
        and mac = #{request.mac,jdbcType=VARCHAR}
      </if>
      <if test="request.startTime != null">
        and create_time &gt;= #{request.startTime,jdbcType=BIGINT}
      </if>
      <if test="request.endTime != null">
        and create_time &lt;= #{request.endTime,jdbcType=BIGINT}
      </if>
      group by sno, mac) t
    where 1 = 1
    <if test="request.minSize != null">
      t.totalSize &gt;= #{request.minSize,jdbcType=INTEGER}
    </if>
    <if test="request.maxSize != null">
      t.totalSize &lt;= #{request.maxSize,jdbcType=INTEGER}
    </if>
    order by totalFlow desc;
  </select>
</mapper>